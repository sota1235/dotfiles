#!/bin/bash

###
# Require util shells
###
DOTFILES_CURRENT=`dirname ${0}`
source $DOTFILES_CURRENT/tool/tools.sh

###
# Functions
###
load_colors

###
# Start install
###
printf "${BOLD}${GREEN}"
echo '.----.  .----.  .---.   .----..-..-.   .----. .----.'
echo '| {}  \/  {}  \{_   _}  | {_  | || |   | {_  { {__  '
echo '|     /\      /  | |    | |   | || `--.| {__ .-._} }'
echo '`----   `----    `-     `-    `- `---- `---- `----  '
echo "(*'-') < Start install the dotfiles"
printf "${NORMAL}"

###
# Check options
###
while getopts u:e: OPT
do
  case $OPT in
    u) GIT_USER_NAME=$OPTARG
      ;;
    e) GIT_EMAIL_ADDRESS=$OPTARG
      ;;
    :|\?) usage_exit
      ;;
  esac
done

###
# judge OS
###
OS=`judge_os`

if [ ! $? -eq 0 ]; then
  exit 1
fi

###
# check zsh installed
###
if ! type zsh > /dev/null 2>&1 ; then
  exit "Zsh is not found. You need install zsh..."
fi

###
# Vim Setup
###

printf "${BOLD}${BLUE}Starting Vim setup${NORMAL}\n"

# backup the vim files
backupDotFiles .vimrc
backupDotFiles .vim

# make the vim files
ln -s `pwd`/vim/vimrc ~/.vimrc
ln -s `pwd`/vim/vimfiles ~/.vim

###
# Intelij IdeaVim Setup
###

printf "${BOLD}${BLUE}Starting IdeaVim setup${NORMAL}\n"

# backup the vim files
backupDotFiles .ideavimrc

# make the vim files
cp `pwd`/phpstorm/ideavimrc $HOME/.ideavimrc

###
# Git Setup
###

printf "${BOLD}${BLUE}Starting Git setup${NORMAL}\n"

# backup the git files
backupDotFiles .gitconfig
backupDotFiles .gitignore

# make the git files
cp `pwd`/gitfiles/gitignore $HOME/.gitignore
cp `pwd`/gitfiles/gitconfig $HOME/.gitconfig

# make original gitconfig_local file
if [ ! -e $HOME/.gitconfig_local ]; then
  if [ ! -n "$GIT_USER_NAME" ]; then
    printf "${YELLOW}Please enter your git name${NORMAL}\n"
    printf "${BOLD}${YELLOW}> ${NORMAL}"
    read GIT_USER_NAME
  else
    printf "${YELLOW}Your git name is $GIT_USER_NAME${NORMAL}\n"
  fi

  if [ ! -n "$GIT_EMAIL_ADDRESS" ]; then
    printf "${YELLOW}Please enter your git e-mail address${NORMAL}\n"
    printf "${BOLD}${YELLOW}> ${NORMAL}"
    read GIT_EMAIL_ADDRESS
  else
    printf "${YELLOW}Your git e-mail address is $GIT_EMAIL_ADDRESS${NORMAL}\n"
  fi

  envsubst < `pwd`/gitfiles/gitconfig_local > $HOME/.gitconfig_local
fi

###
# zsh Setup
###

# include alias.zsh
printf "${BOLD}${BLUE}Starting zsh setup${NORMAL}\n"

# backup the zsh files
backupDotFiles .zshrc
backupDotFiles .zshenv

# create symlink
ln -s `pwd`/zsh/zshrc.zsh $HOME/.zshrc
ln -s `pwd`/zsh/zshenv.zsh $HOME/.zshenv

# make PATH file
if [ ! -e $HOME/.zsh_own_config ]; then
  cp `pwd`/zsh/zsh_own_config.zsh $HOME/.zsh_own_config
fi

# make alias file
if [ ! -e $HOME/.zsh_alias ]; then
  touch $HOME/.zsh_alias
fi

###
# tmux Setup
###

printf "${BOLD}${BLUE}Starting tmux setup${NORMAL}\n"

# backup .tmux.conf
backupDotFiles .tmux.conf

# cp tmux.conf
cp `pwd`/tmux/tmux.conf $HOME/.tmux.conf

###
# Claude Setup
###

printf "${BOLD}${BLUE}Starting Claude setup${NORMAL}\n"

# create .claude directory if not exists
if [ ! -d $HOME/.claude ]; then
  mkdir -p $HOME/.claude
fi

# backup .claude/commands directory
if [ -e $HOME/.claude/commands ] && [ ! -L $HOME/.claude/commands ]; then
  backupDotFiles .claude/commands
fi

# remove old symlink if exists
if [ -L $HOME/.claude/commands ]; then
  rm $HOME/.claude/commands
fi

# create symlink for commands directory
ln -s `pwd`/claude/commands $HOME/.claude/commands

# backup CLAUDE.md if exists
if [ -e $HOME/.claude/CLAUDE.md ] && [ ! -L $HOME/.claude/CLAUDE.md ]; then
  backupDotFiles .claude/CLAUDE.md
fi

# remove old symlink if exists
if [ -L $HOME/.claude/CLAUDE.md ]; then
  rm $HOME/.claude/CLAUDE.md
fi

# create symlink for CLAUDE.md
ln -s `pwd`/claude/CLAUDE.md $HOME/.claude/CLAUDE.md

###
# OS dependency
###

if [ ${OS} = "Mac" ]; then
  `pwd`/init/macos.sh
fi

###
# Exit
###

printf "${BOLD}${BLUE}Installation is completed${NORMAL}\n"

env zsh
exit 0
