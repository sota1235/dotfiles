#!/bin/sh

###
# Functions
###

# Use colors, but only if connected to a terminal, and that terminal
# supports them.
# thanks for oh-my-zsh - https://github.com/robbyrussell/oh-my-zsh
tput=$(which tput)
if [ -n "$tput" ]; then
    ncolors=$($tput colors)
fi
if [ -t 1 ] && [ -n "$ncolors" ] && [ "$ncolors" -ge 8 ]; then
  RED="$(tput setaf 1)"
  GREEN="$(tput setaf 2)"
  YELLOW="$(tput setaf 3)"
  BLUE="$(tput setaf 4)"
  BOLD="$(tput bold)"
  NORMAL="$(tput sgr0)"
else
  RED=""
  GREEN=""
  YELLOW=""
  BLUE=""
  BOLD=""
  NORMAL=""
fi

# output usage of options
function usage_exit {
  echo "Usage: $0 [-u git user name] [-e git email]" 1>&2
  exit 1
}

###
# Alias
###
# GNUとBSDのsedの挙動の違いを吸収
if sed --version 2>/dev/null | grep -q GNU; then
  alias sedi='sed -i '
else
  alias sedi='sed -i "" '
fi

###
# Start install
###
printf "${BOLD}${GREEN}"
echo '.----.  .----.  .---.   .----..-..-.   .----. .----.'
echo '| {}  \/  {}  \{_   _}  | {_  | || |   | {_  { {__  '
echo '|     /\      /  | |    | |   | || `--.| {__ .-._} }'
echo '`----   `----    `-     `-    `- `---- `---- `----  '
echo "(*'-') < Start install the dotfiles"
printf "${NORMAL}"

###
# Check options
###
while getopts u:e: OPT
do
  case $OPT in
    u) GIT_NAME=$OPTARG
      ;;
    e) GIT_MAIL=$OPTARG
      ;;
    :|\?) usage_exit
      ;;
  esac
done

###
# judge OS
###
if [ "$(uname)" == 'Darwin' ]; then
  OS='Mac'
elif [ "$(expr substr $(uname -s) 1 5)" == 'Linux' ]; then
  OS='Linux'
elif [ "$(expr substr $(uname -s) 1 10)" == 'MINGW32_NT' ]; then
  OS='Cygwin'
else
  echo "Your platform ($(uname -a)) is not supported."
  exit 1
fi

###
# check zsh installed
###
if ! type zsh > /dev/null 2>&1 ; then
  exit "Zsh is not found. You need install zsh..."
fi

###
# install submodule
###
git submodule init
git submodule update

###
# Vim Setup
###

printf "${BOLD}${BLUE}Starting Vim setup${NORMAL}\n"

# backup the vim files
if [ -e $HOME/.vimrc ]; then
  cp $HOME/.vimrc $HOME/.vimrc.backup
fi

if [ -e $HOME/.vim ]; then
  cp $HOME/.vim $HOME/.vim.backup
fi

# make the vim files
cp `pwd`/vim/vimrc $HOME/.vimrc
cp -R `pwd`/vim/vim/* $HOME/.vim/

###
# Git Setup
###

printf "${BOLD}${BLUE}Starting Git setup${NORMAL}\n"

# backup the git files
if [ -e $HOME/.gitconfig ]; then
  cp $HOME/.gitconfig $HOME/.gitconfig.backup
fi
if [ -e $HOME/.gitignore ]; then
  cp $HOME/.gitignore $HOME/.gitignore.backup
fi

# make the git files
cp `pwd`/gitfiles/gitignore $HOME/.gitignore
cp `pwd`/gitfiles/gitconfig $HOME/.gitconfig

# make original gitconfig_local file
if [ ! -e $HOME/.gitconfig_local ]; then
  if [ ! -n "$GIT_NAME" ]; then
    printf "${YELLOW}Please enter your git name${NORMAL}\n"
    printf "${BOLD}${YELLOW}> ${NORMAL}"
    read GIT_NAME
  else
    printf "${YELLOW}Your git name is $GIT_NAME${NORMAL}\n"
  fi

  if [ ! -n "$GIT_MAIL" ]; then
    printf "${YELLOW}Please enter your git e-mail address${NORMAL}\n"
    printf "${BOLD}${YELLOW}> ${NORMAL}"
    read GIT_MAIL
  else
    printf "${YELLOW}Your git e-mail address is $GIT_MAIL${NORMAL}\n"
  fi

  cp `pwd`/gitfiles/gitconfig_local $HOME/.gitconfig_local
  sedi s/{git_user_name}/${GIT_NAME}/g     $HOME/.gitconfig_local
  sedi s/{git_email_address}/${GIT_MAIL}/g $HOME/.gitconfig_local
fi

###
# zsh Setup
###

# include alias.zsh
printf "${BOLD}${BLUE}Starting zsh setup${NORMAL}\n"

# backup the zsh files
if [ -e $HOME/.zshrc ]; then
  cp $HOME/.zshrc  $HOME/.zshrc.backup
fi
if [ -e $HOME/.zshenv ]; then
  cp $HOME/.zshenv $HOME/.zshenv.backup
fi

# cp zsh files
cp `pwd`/zsh/zshrc.zsh $HOME/.zshrc
cp `pwd`/zsh/zshenv.zsh $HOME/.zshenv

# make PATH file
if [ ! -e $HOME/.zsh_own_config ]; then
  cp `pwd`/zsh/zsh_own_config.zsh $HOME/.zsh_own_config
fi

# make alias file
if [ ! -e $HOME/.zsh_alias ]; then
  touch $HOME/.zsh_alias
fi

###
# tmux Setup
###

printf "${BOLD}${BLUE}Starting tmux setup${NORMAL}\n"

# backup .tmux.conf
if [ -e $HOME/.tmux.conf ]; then
  cp $HOME/.tmux.conf $HOME/.tmux.conf.backup
fi

# cp tmux.conf
cp `pwd`/tmux/tmux.conf $HOME/.tmux.conf

printf "${BOLD}${BLUE}Installation is completed${NORMAL}\n"

env zsh
exit 0
