#!/bin/zsh

###
# Require utils
###
source $HOME/.dotfiles/tool/tools.sh

### functions and alias for installation ###
function cecho {
  if [ $OS == 'Lunux' ]; then
    printf "\033[34m$*\033[0m\n";
  elif [ $OS == 'Mac' ]; then
    printf "\033[34m$*\033[0m\n";
  else
    # TODO: Cygwinでの挙動
    printf "\033[34m$*\033[0m\n";
  fi
}

###
# Start uninstall
###
echo -n "(*;-;) < Do you want to uninstall the dotfiles? [n/Y] "
ANSWER=""
read ANSWER
if [ $ANSWER != "n" ]; then
  exit "Uninstalling is not done."
fi
# TODO: n/Y以外の場合の処理

###
# judge OS
###
OS=`judge_os`

###
# Uninstall Vim dotfiles
###

cecho "Starting uninstall vim dotfiles"

# recovery the vim files
rm $HOME/.vimrc
rm -rf $HOME/.vim
cp $HOME/.vimrc.backup $HOME/.vimrc
cp -r $HOME/.vim.backup $HOME/.vim

###
# Uninstall IdeaVim dotfiles
###

cecho "Starting uninstall IdeaVim dotfiles"

# recovery the IdeaVim files
cp $HOME/.ideavimrc.backup $HOME/.ideavimrc

###
# Uninstall Git dotfiles
###

cecho "Starting uninstalling Git dotfiles"

# recovery the git dotfiles
cp $HOME/.gitconfig.backup $HOME/.gitconfig
cp $HOME/.gitignore.backup $HOME/.gitignore
if [ -e $HOME/.gitconfig_local ]; then
  rm $HOME/.gitconfig_local
fi

###
# Uninstall zsh dotfiles
###

cecho "Starting uninstalling zsh dotfiles"

rm $HOME/.zshrc
rm $HOME/.zshenv
cp $HOME/.zshrc.backup  $HOME/.zshrc
cp $HOME/.zshenv.backup $HOME/.zshenv
if [ -e $HOME/.zsh_own_config ]; then
  rm $HOME/.zsh_own_config
fi
if [ -e $HOME/.zsh_alias ]; then
  rm $HOME/.zsh_alias
fi

###
# Uninstall tmux dotfiles
###

cecho "Startging uninstalling tmux dotfiles"

cp $HOME/.tmux.conf.backup $HOME/.tmux.conf

###
# Uninstall Claude dotfiles
###

cecho "Starting uninstalling Claude dotfiles"

# remove commands symlink
if [ -L $HOME/.claude/commands ]; then
  rm $HOME/.claude/commands
fi

# restore backup if exists
if [ -e $HOME/.claude/commands.backup ]; then
  cp -r $HOME/.claude/commands.backup $HOME/.claude/commands
fi

# remove CLAUDE.md symlink
if [ -L $HOME/.claude/CLAUDE.md ]; then
  rm $HOME/.claude/CLAUDE.md
fi

# restore backup if exists
if [ -e $HOME/.claude/CLAUDE.md.backup ]; then
  cp $HOME/.claude/CLAUDE.md.backup $HOME/.claude/CLAUDE.md
fi

###
# Uninstall nodebrew
###

cecho "Startging uninstalling nodebrew"

rm -rf ~/.nodebrew

cecho "Uninstalling is completed!! Thanks for using."
