#!/bin/zsh

# Use colors, but only if connected to a terminal, and that terminal
# supports them.
# thanks for oh-my-zsh - https://github.com/robbyrussell/oh-my-zsh
tput=$(which tput)
if [ -n "$tput" ]; then
    ncolors=$($tput colors)
fi
if [ -t 1 ] && [ -n "$ncolors" ] && [ "$ncolors" -ge 8 ]; then
  RED="$(tput setaf 1)"
  GREEN="$(tput setaf 2)"
  YELLOW="$(tput setaf 3)"
  BLUE="$(tput setaf 4)"
  BOLD="$(tput bold)"
  NORMAL="$(tput sgr0)"
else
  RED=""
  GREEN=""
  YELLOW=""
  BLUE=""
  BOLD=""
  NORMAL=""
fi

# GNUとBSDのsedの挙動の違いを吸収
if sed --version 2>/dev/null | grep -q GNU; then
  alias sedi='sed -i '
else
  alias sedi='sed -i "" '
fi

###
# Start install
###
printf "${BOLD}${GREEN}(*'-') < Do you want to update the dotfiles? [y/N] ${NORMAL}"
ANSWER=""
read ANSWER
if [ $ANSWER != "y" ]; then
  exit "Update is not done...(._.)"
fi
# TODO: y/N以外の場合の処理

###
# judge OS
###
if [ "$(uname)"=='Darwin' ]; then
  OS='Mac'
elif [ "$(expr substr $(uname -s) 1 5)"=='Linux' ]; then
  OS='Linux'
elif [ "$(expr substr $(uname -s) 1 10)"=='MINGW32_NT' ]; then
  OS='Cygwin'
else
  echo "Your platform ($(uname -a)) is not supported."
  exit 1
fi

###
# Cloning latest dotfiles
###

printf "${BOLD}${GREEN}Starting cloning latest dotfiles${NORMAL}\n"

CURRENT_PATH=`pwd` # save current path
cd $HOME/.dotfiles
if git pull --stat --rebase origin master; then
  printf "${BOLD}${GREEN}"
  echo '.----.  .----.  .---.   .----..-..-.   .----. .----.'
  echo '| {}  \/  {}  \{_   _}  | {_  | || |   | {_  { {__  '
  echo '|     /\      /  | |    | |   | || `--.| {__ .-._} }'
  echo '`----   `----    `-     `-    `- `---- `---- `----  '
  printf "${NORMAL}"
else
  printf "${BOLD}${RED}There was an error updating. Try again later?${NORMAL}\n"
fi

###
# Vim Setup
###

printf "${BOLD}${GREEN}Starting Vim updating${NORMAL}\n"

# make the vim files
cp `pwd`/vim/vimrc $HOME/.vimrc
cp -R `pwd`/vim/vim $HOME/.vim

###
# Git Setup
###

printf "${BOLD}${GREEN}Starting Git setup${NORMAL}\n"

# make the git files
cp `pwd`/gitfiles/gitignore ~/.gitignore
cp `pwd`/gitfiles/gitconfig ~/.gitconfig

###
# Zsh Setup
###

# include alias.zsh
printf "${BOLD}${GREEN}Starting zsh setup${NORMAL}\n"

# cp zsh files
cp `pwd`/zsh/zshrc.zsh ~/.zshrc
cp `pwd`/zsh/zshenv.zsh ~/.zshenv

###
# tmux Setup
###

printf "${BOLD}${GREEN}Startging tmux setup${NORMAL}\n"

# cp tmux.conf
cp `pwd`/tmux/tmux.conf ~/.tmux.conf

###
# sshrc Setup
###

printf "${BOLD}${GREEN}Starting sshrc setup${NORMAL}\n"

# copy .sshrc
cp `pwd`/ssh/sshrc_config $HOME/.sshrc

###
# Completed
###

printf "${BOLD}${GREEN}Updating is completed${NORMAL}\n"

cd $CURRENT_PATH # return to path command excute

env zsh
